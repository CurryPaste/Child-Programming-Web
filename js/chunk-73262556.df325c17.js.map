{"version":3,"sources":["webpack:///./src/views/Class/class3.vue?7b6e","webpack:///./src/views/Class/class3.vue","webpack:///src/views/Class/class3.vue","webpack:///./src/views/Class/class3.vue?06ce","webpack:///./src/views/Class/class3.vue?89ab"],"names":["render","_vm","this","_self","_c","_m","staticRenderFns","staticStyle","attrs","engine","camera","plane","ground","skybox","car","startingPoint","async","loadScene","scene","dragListening","console","currentMesh","setTimeout","canvas","initRobot","mesh","initScene","window","light","materialPlane","radius","groundMaterial","skyMaterial","name","data","component"],"mappings":"kHAAA,W,2CCAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAQD,EAAIE,MAAMC,GAAG,OAAOH,EAAII,GAAG,IAEtEC,EAAkB,CAAC,WAAY,IAAIL,EAAIC,KAAKE,EAAGH,EAAIE,MAAMC,GAAG,OAAOA,EAAG,MAAM,CAACG,YAAY,CAAC,OAAS,OAAO,MAAQ,SAAS,CAACH,EAAG,MAAM,CAACA,EAAG,SAAS,CAACI,MAAM,CAAC,GAAK,wB,wBCW/J,EAAQ,KACRC,EAAS,KACTC,EAAS,KACTC,EAAQ,KACRC,EAAS,KACTC,EAAS,KACTC,EAAM,KACNC,EAAgB,IAAI,aAAgB,EAAG,EAAG,GAE9CC,eAAeC,IAEfC,YAGA,IAGAC,IAQA,SAASA,IAET,IAEA,EAFA,yBAKA,aACA,gDACA,qBAEA,aACA,cAEA,MAIA,cACA,iBAIA,gDACA,8BAEAC,0BAEA,QACAC,eACA,eACAD,yBACA,wBAEAC,YAEAD,6BAEAL,OAEA,GACAO,uBACAZ,qBACA,MAMA,cACA,MAGA,GAIA,WACA,MAIAU,+BACA,oBACAA,sBACAC,yBACAD,uCAEAL,OAIA,aAEA,KAGA,OAFAL,2BACAK,SAMAQ,uCACAA,qCACAA,uCAIAP,eAAeQ,IACfJ,yBAEA,8CAEA,qBACA,yDACA,WACAA,wBAEA,6BACA,WACA,eACAK,kCACAA,WAGAX,IAKA,SAASY,IAET,8CAEAjB,wBAEA,wBAEAA,4BACAS,cAGAS,6CACAlB,cAIAC,sEACAA,4CAEAA,qBACAA,sBACAA,wBAEAA,mBACAA,oBACAQ,sCAEAR,sBAGA,qEAEAkB,kCAEAA,cAGA,kDACAC,wDACAA,qBACAA,WACAlB,wCAAAmB,YAAA,GACAnB,uBACAA,aACAA,iBACAA,sBAGA,YACAC,8CACA,sCACAmB,gCACAA,UACA,YACAA,mCACAA,qBAEAA,wBAEAA,wBACA,UACAA,qCACAA,WACAnB,aACAA,sBAGA,4CAMA,OALAoB,gBACAA,qBACAnB,sCACAA,aAEA,EAIe,OACfoB,YACAC,OACA,UAEA,sBAEA,MCzO+V,I,wBCQ3VC,EAAY,eACd,EACAnC,EACAM,GACA,EACA,KACA,WACA,MAIa,aAAA6B,E","file":"js/chunk-73262556.df325c17.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./class3.vue?vue&type=style&index=0&id=428c045b&prod&scoped=true&lang=css&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"height\":\"100%\",\"width\":\"100%\"}},[_c('div',[_c('canvas',{attrs:{\"id\":\"renderCanvas\"}})])])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div style=\"height: 100%;width: 100%;\">\n    <div>\n      <canvas id=\"renderCanvas\"></canvas>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as BABYLON from 'babylonjs';\nimport * as BABYLON_MATERAIAL from \"babylonjs-materials\"\n\n//全局变量\nvar scene = null //场景实例\nvar engine = null //3d引擎实例\nvar camera = null //摄像机实例\nvar plane = null //绿地\nvar ground = null //网格\nvar skybox = null //天空盒\nvar car = null //小车\nvar startingPoint = new BABYLON.Vector3(0, 0, 0)//当前点击位置\n\nasync function loadScene() {\n  //场景初始化，可看文章一\n  scene = initScene()\n\n  //加载网络模型，可看文章二\n  await initRobot()\n\n  //本文内容，监听拖动事件，实现点击拖动模型\n  dragListening()\n\n  //开启debug窗口\n  // scene.debugLayer.show()\n\n}\n\n//鼠标点击拖动监听\nfunction dragListening() {\n  // 物体拖拽事件\n  var canvas = engine.getRenderingCanvas();\n\n  var currentMesh;//当前点击的模型网格\n\n  //判断当前点击对象是否是地板\n  var getGroundPosition = function () {\n    var pickinfo = scene.pick(scene.pointerX, scene.pointerY, function (mesh) {\n      return (mesh == ground || mesh == plane);\n    });\n    if (pickinfo.hit) {\n      return pickinfo.pickedPoint;\n    }\n    return null;\n  }\n\n  //鼠标点下\n  var onPointerDown = function (evt) {\n    if (evt.button !== 0) {\n      return;\n    }\n    //判断当前是否点击一个模型网格，如果是地板、天空盒等对象，则设置hit为false\n    var pickInfo = scene.pick(scene.pointerX, scene.pointerY, function (mesh) {\n      return (mesh !== ground && mesh !== plane && mesh !== skybox);\n    });\n    console.log(\"pickInfo\", pickInfo)\n    //如果hit为true，则不为地板、天空盒等对象\n    if (pickInfo.hit) {\n      currentMesh = pickInfo.pickedMesh;//获取当前点击对象\n      if (currentMesh.parent == null) {\n        console.log(\"no parent\")//没有父节点则就是car对象了\n      } else if (currentMesh.parent.name == car.name) {\n        //有父节点，证明现在点击的是子对象，而移动需要移动整个小车对象，所以设置当前点击mesh为父节点（即car对象）\n        currentMesh = currentMesh.parent\n      }\n      console.log(\"currentMesh\", currentMesh)\n      //获取当前移动时地板的坐标\n      startingPoint = getGroundPosition(evt);\n      //移动物体时，暂时屏蔽相机的移动控制\n      if (startingPoint) { // we need to disconnect camera from canvas\n        setTimeout(function () {\n          camera.detachControl(canvas);\n        }, 0);\n      }\n    }\n  }\n\n  //鼠标点击着移动中\n  var onPointerMove = function (evt) {\n    if (!startingPoint) {\n      return;\n    }\n    if (!currentMesh) {\n      return;\n    }\n    //更新当前点击的地板位置\n    var current = getGroundPosition(evt);\n    if (!current) {\n      return;\n    }\n    //更新当前小车坐标位置为点击的地板位置\n    console.log('startingPoint', startingPoint)\n    var diff = current.subtract(startingPoint);\n    console.log('diff', diff)\n    currentMesh.position.addInPlace(diff);\n    console.log(\"currentMesh.name\", currentMesh.name)\n    //更新位置信息\n    startingPoint = current;\n  }\n\n  //鼠标点击后松开\n  var onPointerUp = function () {\n    //恢复相机移动控制\n    if (startingPoint) {\n      camera.attachControl(canvas, true);\n      startingPoint = null;\n      return;\n    }\n  }\n\n  //canvas绑定监听事件\n  canvas.addEventListener(\"pointerdown\", onPointerDown, false);\n  canvas.addEventListener(\"pointerup\", onPointerUp, false);\n  canvas.addEventListener(\"pointermove\", onPointerMove, false);\n}\n\n\nasync function initRobot() {\n  console.log('initRobot')\n  //模型url路径\n  const url = \"http://localhost:8088/static/model/\"\n  //模型名称\n  const modelName = \"sportcar.babylon\"\n  var result = await BABYLON.SceneLoader.ImportMeshAsync(null, url, modelName, scene);\n  var meshes = result.meshes\n  console.log(\"meshes\", meshes)\n  //定义一个根节点\n  var parent = new BABYLON.Mesh(\"car\", scene);\n  const scale = 10//缩放比例\n  for (var mesh of meshes) {\n    mesh.scaling = new BABYLON.Vector3(scale, scale, scale)\n    mesh.parent = parent\n  }\n  //将根节点设置为全局变量\n  car = parent\n\n\n}\n\nfunction initScene() {\n  //获取到renderCanvas这个元素\n  var canvas = document.getElementById(\"renderCanvas\");\n  //初始化引擎\n  engine = new BABYLON.Engine(canvas, true);\n  //初始化场景\n  var scene = new BABYLON.Scene(engine);\n  //注册一个渲染循环来重复渲染场景\n  engine.runRenderLoop(function () {\n    scene.render();\n  });\n  //浏览器窗口变化时监听\n  window.addEventListener(\"resize\", function () {\n    engine.resize();\n  });\n\n  //相机初始化\n  camera = new BABYLON.ArcRotateCamera(\"Camera\", 0, 0, 5, new BABYLON.Vector3(0, 0, 10), scene);\n  camera.setPosition(new BABYLON.Vector3(20, 200, 400));\n  //相机角度限制\n  camera.upperBetaLimit = 1.5;//最大z轴旋转角度差不多45度俯瞰\n  camera.lowerRadiusLimit = 50;//最小缩小比例\n  camera.upperRadiusLimit = 1500;//最大放大比例\n  //变焦速度\n  camera.wheelPrecision = 1; //电脑滚轮速度 越小灵敏度越高\n  camera.pinchPrecision = 20; //手机放大缩小速度 越小灵敏度越高\n  scene.activeCamera.panningSensibility = 100;//右键平移灵敏度\n  // 将相机和画布关联\n  camera.attachControl(canvas, true);\n\n  //灯光初始化\n  var light = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(0, 10, 0), scene);\n  //设置高光颜色\n  light.specular = new BABYLON.Color3(0, 0, 0);\n  //设置灯光强度\n  light.intensity = 1\n\n  // 绿地初始化\n  var materialPlane = new BABYLON.StandardMaterial(\"texturePlane\", scene);\n  materialPlane.diffuseColor = new BABYLON.Color3(152 / 255.0, 209 / 255.0, 115 / 255.0)\n  materialPlane.backFaceCulling = false;\n  materialPlane.freeze()\n  plane = BABYLON.MeshBuilder.CreateDisc(\"ground\", {radius: 3000}, scene);\n  plane.rotation.x = Math.PI / 2;\n  plane.material = materialPlane;\n  plane.position.y = -0.1;\n  plane.freezeWorldMatrix()\n\n  //网格地板初始化\n  const groundSide = 144;\n  ground = BABYLON.Mesh.CreateGround(\"ground\", groundSide, groundSide, 1, scene, true);\n  var groundMaterial = new BABYLON_MATERAIAL.GridMaterial(\"grid\", scene);\n  groundMaterial.mainColor = BABYLON.Color3.White();//底板颜色\n  groundMaterial.alpha = 1;//透明度\n  const gridLineGray = 0.95;\n  groundMaterial.lineColor = new BABYLON.Color3(gridLineGray, gridLineGray, gridLineGray);\n  groundMaterial.backFaceCulling = true; // 可看到背面\n  //大网格间距\n  groundMaterial.majorUnitFrequency = 16;\n  //小网格间距\n  groundMaterial.minorUnitVisibility = 0;\n  const gridOffset = 8; // 网格偏移量\n  groundMaterial.gridOffset = new BABYLON.Vector3(gridOffset, 0, gridOffset);\n  groundMaterial.freeze(); // 冻结材质，优化渲染速度\n  ground.material = groundMaterial\n  ground.freezeWorldMatrix()\n\n  //天空盒初始化\n  var skyMaterial = new BABYLON_MATERAIAL.SkyMaterial(\"skyMaterial\", scene);\n  skyMaterial.inclination = 0\n  skyMaterial.backFaceCulling = false;\n  skybox = BABYLON.Mesh.CreateBox(\"skyBox\", 5000.0, scene);\n  skybox.material = skyMaterial;\n\n  return scene\n}\n\n\nexport default {\n  name: \"test\",\n  data() {\n    return {}\n  },\n  async mounted() {\n    //加载场景\n    await loadScene()\n  },\n}\n</script>\n\n<style scoped>\n#renderCanvas {\n  width: 680px;\n  height: 680px;\n  touch-action: none;\n  z-index: 10000;\n  border-radius: 10px;\n}\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./class3.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./class3.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./class3.vue?vue&type=template&id=428c045b&scoped=true&\"\nimport script from \"./class3.vue?vue&type=script&lang=js&\"\nexport * from \"./class3.vue?vue&type=script&lang=js&\"\nimport style0 from \"./class3.vue?vue&type=style&index=0&id=428c045b&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"428c045b\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}